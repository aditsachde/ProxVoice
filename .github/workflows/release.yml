name: Release

on: 
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ProxVoice ${{ github.ref }}
          body: |
            ProxVoice ${{ github.ref }}
          draft: false
          prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  mod:
    runs-on: ubuntu-latest
    needs: release
    defaults:
      run:
        working-directory: mod

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build Jar
        run: ./gradlew jar
      - name: Get Jar name
        id: name
        run: |
          echo "::set-output name=jar::$(ls build/libs)"
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }} 
          asset_path: mod/build/libs/${{ steps.name.outputs.jar }}
          asset_name: ${{ steps.name.outputs.jar }}
          asset_content_type: application/java-archive

  linux:
    runs-on: ubuntu-latest
    needs: release

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Build Server
        run: |
          cd server
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          pyinstaller --clean -y webserver.spec
      - name: Move server files
        run: mv server/dist client/src/dist

      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Build
        run: |
          cd client
          yarn install
          yarn make
      - name: Get Zip name
        id: name
        run: |
          echo "::set-output name=zip::$(ls client/out/make/zip/linux/x64)"
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }} 
          asset_path: client/out/make/zip/linux/x64/${{ steps.name.outputs.zip }}
          asset_name: ${{ steps.name.outputs.zip }}
          asset_content_type: application/zip

  macos:
    runs-on: macos-latest
    needs: release

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - uses: actions/cache@v2
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Build Server
        run: |
          cd server
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          pyinstaller --clean -y webserver.spec
      - name: Move server files
        run: mv server/dist client/src/dist
        
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Build
        run: |
          cd client
          yarn install
          yarn make
      - name: Get Zip name
        id: name
        run: |
          echo "::set-output name=zip::$(ls client/out/make/zip/darwin/x64)"
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }} 
          asset_path: client/out/make/zip/darwin/x64/${{ steps.name.outputs.zip }}
          asset_name: ${{ steps.name.outputs.zip }}
          asset_content_type: application/zip

  windows:
    runs-on: windows-latest
    needs: release

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - uses: actions/cache@v2
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Build Server
        run: |
          Set-Location server
          Python -m pip install --upgrade pip
          Python -m pip install -r requirements.txt
          pyinstaller --clean -y webserver.spec
        shell: powershell
      - name: Move server files
        run: Move-Item server\dist client\src\dist
        shell: powershell

      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: Write-Output "::set-output name=dir::$(yarn cache dir)"
        shell: powershell
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Build
        run: |
          Set-Location client
          yarn install
          yarn make
      - name: Get Zip name
        id: name
        run: |
          Write-Output "::set-output name=zip::$(Get-ChildItem -Name client\out\make\zip\win32\x64)"
        shell: powershell
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }} 
          asset_path: client\out\make\zip\win32\x64\${{ steps.name.outputs.zip }}
          asset_name: ${{ steps.name.outputs.zip }}
          asset_content_type: application/zip